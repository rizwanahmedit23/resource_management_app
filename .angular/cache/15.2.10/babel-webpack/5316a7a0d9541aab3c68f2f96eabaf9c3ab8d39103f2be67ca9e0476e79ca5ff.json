{"ast":null,"code":"import { UserRole } from '../enums/user-role.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./discussion-details.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../login/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction DiscussionDetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Discussion Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function DiscussionDetailsComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addDiscussionDetails());\n    });\n    i0.ɵɵelementStart(4, \"label\", 10);\n    i0.ɵɵtext(5, \"Discussion Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function DiscussionDetailsComponent_div_0_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.discussionDate = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 12);\n    i0.ɵɵtext(8, \"Discussion Notes:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"textarea\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function DiscussionDetailsComponent_div_0_Template_textarea_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.discussionNotes = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 14);\n    i0.ɵɵtext(11, \"Add Discussion\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.discussionDate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.discussionNotes);\n  }\n}\nfunction DiscussionDetailsComponent_tr_16_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"td\")(2, \"button\", 15);\n    i0.ɵɵtext(3, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DiscussionDetailsComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DiscussionDetailsComponent_tr_16_div_5_Template, 4, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const discussion_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(discussion_r6.discussionDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(discussion_r6.discussionNotes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isHomePage());\n  }\n}\nexport class DiscussionDetailsComponent {\n  constructor(discussionDetailsService, router, authService) {\n    this.discussionDetailsService = discussionDetailsService;\n    this.router = router;\n    this.authService = authService;\n    this.discussionDate = new Date();\n    this.discussionNotes = \"\";\n    this.discussionDetails = [];\n    this.userRoles = UserRole;\n  }\n  ngOnInit() {\n    this.loadCandidates();\n  }\n  loadCandidates() {\n    this.discussionDetailsService.getAllDiscussions().subscribe({\n      next: data => {\n        this.discussionDetails = data;\n      },\n      error: error => {\n        console.error('Error loading candidates', error);\n      }\n    });\n  }\n  addDiscussionDetails() {\n    const newDiscussion = {\n      discussionId: 0,\n      candidateId: 0,\n      discussionDate: this.discussionDate,\n      discussionNotes: this.discussionNotes\n    };\n    this.discussionDetailsService.addDiscussionDetails(newDiscussion).subscribe({\n      next: addedDiscussion => {\n        this.discussionDetails.push(addedDiscussion);\n        // Optionally, clear the form fields after adding\n        this.discussionDate = new Date();\n        this.discussionNotes = '';\n      },\n      error: error => {\n        console.error('Error adding discussion details:', error);\n      }\n    });\n  }\n  isHomePage() {\n    return this.router.url === '/home';\n  }\n  static #_ = this.ɵfac = function DiscussionDetailsComponent_Factory(t) {\n    return new (t || DiscussionDetailsComponent)(i0.ɵɵdirectiveInject(i1.DiscussionDetailsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DiscussionDetailsComponent,\n    selectors: [[\"app-discussion-details\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [1, \"container-fluid\"], [1, \"navbar\", \"navbar-expand-lg\", \"navbar-light\", \"bg-light\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarSupportedContent\", \"aria-controls\", \"navbarSupportedContent\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [1, \"table\", \"table-hover\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"for\", \"discussionDate\"], [\"type\", \"date\", \"id\", \"discussionDate\", \"name\", \"discussionDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"discussionNotes\"], [\"id\", \"discussionNotes\", \"name\", \"discussionNotes\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\"]],\n    template: function DiscussionDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DiscussionDetailsComponent_div_0_Template, 12, 2, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"nav\", 2)(3, \"div\", 1)(4, \"a\", 3);\n        i0.ɵɵtext(5, \"Discussion Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵelement(7, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"table\", 6)(9, \"thead\")(10, \"tr\")(11, \"th\", 7);\n        i0.ɵɵtext(12, \"Discussion Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 7);\n        i0.ɵɵtext(14, \"Discussino Note\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, DiscussionDetailsComponent_tr_16_Template, 6, 3, \"tr\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHomePage() && ((tmp_0_0 = ctx.authService.getCurrentUser()) == null ? null : tmp_0_0.role) === ctx.userRoles.RECRUITER);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.discussionDetails);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["UserRole","i0","DiscussionDetailsComponent","constructor","discussionDetailsService","router","authService","Date","ngOnInit","loadCandidates","getAllDiscussions","subscribe","next","data","discussionDetails","error","console","addDiscussionDetails","newDiscussion","discussionId","candidateId","discussionDate","discussionNotes","addedDiscussion","push","isHomePage","url","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\RizwanAhmed\\Downloads\\resource_management_app\\resource_management_app\\src\\app\\discussion-details\\discussion-details.component.ts","C:\\Users\\RizwanAhmed\\Downloads\\resource_management_app\\resource_management_app\\src\\app\\discussion-details\\discussion-details.component.html"],"sourcesContent":["// discussion-details.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DiscussionDetailsService } from './discussion-details.service';\r\nimport { DiscussionDetails } from './discussion-details.model';\r\nimport { Router } from '@angular/router';\r\nimport { UserRole } from '../enums/user-role.enum';\r\nimport { AuthService } from '../login/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-discussion-details',\r\n  templateUrl: './discussion-details.component.html',\r\n  styleUrls: ['./discussion-details.component.css'],\r\n})\r\nexport class DiscussionDetailsComponent implements OnInit {\r\n  discussionDate: Date = new Date() ;\r\n  discussionNotes: string =\"\";\r\n  discussionDetails: any[] = [];\r\n  userRoles = UserRole;\r\n\r\n  constructor(private discussionDetailsService: DiscussionDetailsService,private router: Router, public authService: AuthService) {}\r\n  ngOnInit(): void {\r\n    this.loadCandidates();\r\n  }\r\n  loadCandidates() {\r\n    this.discussionDetailsService.getAllDiscussions().subscribe({\r\n      next: (data) => {\r\n        this.discussionDetails = data;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading candidates', error);\r\n      }\r\n    });\r\n  }\r\n  addDiscussionDetails() {\r\n    const newDiscussion: DiscussionDetails = {\r\n      discussionId: 0, // Let the server generate the ID\r\n      candidateId: 0, /* Provide the candidate ID here */ // Reference to the candidate details\r\n      discussionDate: this.discussionDate,\r\n      discussionNotes: this.discussionNotes,\r\n    };\r\n\r\n    this.discussionDetailsService.addDiscussionDetails(newDiscussion).subscribe({\r\n      next: (addedDiscussion: DiscussionDetails) => {\r\n        this.discussionDetails.push(addedDiscussion);\r\n        // Optionally, clear the form fields after adding\r\n        this.discussionDate = new Date();\r\n        this.discussionNotes = '';\r\n      },\r\n      error: (error) => {\r\n        console.error('Error adding discussion details:', error);\r\n      }\r\n    });\r\n  }\r\n  isHomePage(): boolean {\r\n    return this.router.url === '/home';\r\n  }\r\n  // Implement methods for editing, deleting, and fetching discussion details\r\n \r\n}\r\n","<div *ngIf=\"!isHomePage() && authService.getCurrentUser()?.role === userRoles.RECRUITER\">\r\n    <h2>Discussion Details</h2>\r\n    <!-- Display a form to add a new discussion -->\r\n    <form (ngSubmit)=\"addDiscussionDetails()\">\r\n      <label for=\"discussionDate\">Discussion Date:</label>\r\n      <input type=\"date\" id=\"discussionDate\" name=\"discussionDate\" [(ngModel)]=\"discussionDate\" required>\r\n  \r\n      <label for=\"discussionNotes\">Discussion Notes:</label>\r\n      <textarea id=\"discussionNotes\" name=\"discussionNotes\" [(ngModel)]=\"discussionNotes\" required></textarea>\r\n  \r\n      <button class=\"btn btn-outline-success\"  type=\"submit\">Add Discussion</button>\r\n    </form>\r\n  </div>\r\n    <!-- Display the list of discussion details -->\r\n    <!-- <ul>\r\n      <li *ngFor=\"let discussion of discussionDetails\">\r\n          <p>Date: {{ discussion.discussionDate | date }}</p>\r\n          <p>Notes: {{ discussion.discussionNotes }}</p>       \r\n      </li>\r\n    </ul> -->\r\n\r\n\r\n    <div class=\"container-fluid\">\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Discussion Details</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <!-- <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              \r\n              <a *ngif=\"authService.getCurrentUser()?.role === userRoles.RECRUITER\"><button class=\"btn btn-outline-success\" routerLink=\"/discussion-details\" >Modify Candidate</button></a>\r\n            </div> -->\r\n          </div>\r\n      </nav>\r\n    \r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr> \r\n          <th scope=\"col\">Discussion Date</th>\r\n          <th scope=\"col\">Discussino Note</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let discussion of discussionDetails\">\r\n          <th>{{discussion.discussionDate}}</th>\r\n          <th>{{discussion.discussionNotes}}</th>\r\n          <div *ngIf=\"!isHomePage()\">\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-outline-primary\" >Edit</button>\r\n              <!-- <button type=\"button\" class=\"btn btn-otline-danger\" (click)=\"deleteCandidate(i)\">Delete</button> -->\r\n            </td>\r\n          </div>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n   "]},"metadata":{},"sourceType":"module","externalDependencies":[]}