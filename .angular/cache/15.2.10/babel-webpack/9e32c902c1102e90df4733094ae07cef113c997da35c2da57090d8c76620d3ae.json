{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class level1InterviewFeedbackService {\n  constructor(http) {\n    this.http = http;\n    // http://localhost:8080/api/feedback1\n    //https://recruitment-management-backend-production.up.railway.app/api/feedback1\n    this.apiUrl = 'http://localhost:8080/api/feedback1'; // Replace with your API URL\n  }\n\n  getLevel1InterviewFeedback(candidateId) {\n    // return this.http.get(`${this.apiUrl}/getInterviewFeedback1ByCandidateID/${candidateId}`);\n    const url = `${this.apiUrl}/getInterviewFeedback1ByCandidateID/${candidateId}`;\n    return this.http.get(url).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = 'An error occurred';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n  addLevel1InterviewFeedback(feedback, candidateId) {\n    return this.http.post(`${this.apiUrl}/addInterviewFeedback1ByCandidateID/${candidateId}`, feedback);\n  }\n  static #_ = this.ɵfac = function level1InterviewFeedbackService_Factory(t) {\n    return new (t || level1InterviewFeedbackService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: level1InterviewFeedbackService,\n    factory: level1InterviewFeedbackService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,8BAA8B;EAKzCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB;IACA;IACQ,WAAM,GAAG,qCAAqC,CAAC,CAAC;EAEhB;;EAExCC,0BAA0B,CAACC,WAAmB;IAC5C;IACA,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,uCAAuCF,WAAW,EAAE;IAC9E,OAAO,IAAI,CAACF,IAAI,CAACK,GAAG,CAAMF,GAAG,CAAC,CAACG,IAAI,CACjCT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACH;EAEQA,WAAW,CAACC,KAAwB;IAC1C,IAAIC,YAAY,GAAG,mBAAmB;IACtC,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAG,UAAUD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;KAC/C,MAAM;MACL;MACAF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzEE,OAAO,CAACL,KAAK,CAACC,YAAY,CAAC;IAC3B,OAAOb,UAAU,CAACa,YAAY,CAAC;EACjC;EAEAK,0BAA0B,CAACC,QAAa,EAAEb,WAAmB;IAC3D,OAAO,IAAI,CAACF,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACZ,MAAM,uCAAuCF,WAAW,EAAE,EAAEa,QAAQ,CAAC;EACrG;EAAC;qBA9BUjB,8BAA8B;EAAA;EAAA;WAA9BA,8BAA8B;IAAAmB,SAA9BnB,8BAA8B;IAAAoB,YAF7B;EAAM","names":["throwError","catchError","level1InterviewFeedbackService","constructor","http","getLevel1InterviewFeedback","candidateId","url","apiUrl","get","pipe","handleError","error","errorMessage","ErrorEvent","message","status","console","addLevel1InterviewFeedback","feedback","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\RizwanAhmed\\Downloads\\resource_management_app_new\\resource_management_app\\src\\app\\services\\level1-interview-feedback.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class level1InterviewFeedbackService {\r\n  // http://localhost:8080/api/feedback1\r\n  //https://recruitment-management-backend-production.up.railway.app/api/feedback1\r\n  private apiUrl = 'http://localhost:8080/api/feedback1'; // Replace with your API URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLevel1InterviewFeedback(candidateId: number): Observable<any> {\r\n    // return this.http.get(`${this.apiUrl}/getInterviewFeedback1ByCandidateID/${candidateId}`);\r\n    const url = `${this.apiUrl}/getInterviewFeedback1ByCandidateID/${candidateId}`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'An error occurred';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side error\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  addLevel1InterviewFeedback(feedback: any, candidateId: number): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/addInterviewFeedback1ByCandidateID/${candidateId}`, feedback);\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}