{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/level1-interview-feedback.service\";\nimport * as i3 from \"../../services/level2-interview-feedback.service\";\nimport * as i4 from \"../../services/hr-discussion-feedback.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction InterviewFeedbackComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Enter Level 1 Interview Feedback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"textarea\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function InterviewFeedbackComponent_div_0_Template_textarea_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newLevel1Feedback = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function InterviewFeedbackComponent_div_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.submitLevel1Feedback());\n    });\n    i0.ɵɵtext(5, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newLevel1Feedback);\n  }\n}\nfunction InterviewFeedbackComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Level 1 Interview Feedback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function InterviewFeedbackComponent_div_1_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.editLevel1Feedback());\n    });\n    i0.ɵɵtext(6, \"Edit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.level1Feedback);\n  }\n}\nfunction InterviewFeedbackComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Enter Level 2 Interview Feedback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"textarea\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function InterviewFeedbackComponent_div_2_Template_textarea_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.newLevel2Feedback = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function InterviewFeedbackComponent_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.submitLevel2Feedback());\n    });\n    i0.ɵɵtext(5, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.newLevel2Feedback);\n  }\n}\nfunction InterviewFeedbackComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Level 2 Interview Feedback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function InterviewFeedbackComponent_div_3_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.editLevel2Feedback());\n    });\n    i0.ɵɵtext(6, \"Edit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r3.level2Feedback);\n  }\n}\nfunction InterviewFeedbackComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Enter HR Discussion Feedback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"textarea\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function InterviewFeedbackComponent_div_4_Template_textarea_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.newHRDiscussion = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function InterviewFeedbackComponent_div_4_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.submitHRDiscussion());\n    });\n    i0.ɵɵtext(5, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.newHRDiscussion);\n  }\n}\nfunction InterviewFeedbackComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"HR Discussion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function InterviewFeedbackComponent_div_5_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.editHRDiscussion());\n    });\n    i0.ɵɵtext(6, \"Edit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r5.hrDiscussion);\n  }\n}\nexport class InterviewFeedbackComponent {\n  constructor(route, level1Service, level2Service, hrDiscussionService) {\n    this.route = route;\n    this.level1Service = level1Service;\n    this.level2Service = level2Service;\n    this.hrDiscussionService = hrDiscussionService;\n    this.candidateId = 0;\n    this.level1Feedback = \"\";\n    this.level2Feedback = \"\";\n    this.hrDiscussion = \"\";\n    // New properties to store the new feedback and editing flags\n    this.newLevel1Feedback = '';\n    this.newLevel2Feedback = '';\n    this.newHRDiscussion = '';\n    this.editingLevel1Feedback = false;\n    this.editingLevel2Feedback = false;\n    this.editingHRDiscussion = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.candidateId = params['id'];\n      this.fetchInterviewDetails();\n    });\n  }\n  fetchInterviewDetails() {\n    this.level1Service.getLevel1InterviewFeedback(this.candidateId).subscribe(data => {\n      this.level1Feedback = data;\n    }, error => {\n      console.log(error);\n    });\n    this.level2Service.getLevel2InterviewFeedback(this.candidateId).subscribe(data => {\n      this.level2Feedback = data;\n    }, error => {\n      console.log(error);\n    });\n    this.hrDiscussionService.getHRDiscussion(this.candidateId).subscribe(data => {\n      this.hrDiscussion = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  // Methods to handle submission of new feedback\n  submitLevel1Feedback() {\n    // If already editing, update existing feedback instead of adding new\n    if (this.level1Feedback != \"\") {\n      // Call service to update existing feedback\n      this.level1Service.updateLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(data => {\n        this.level1Feedback = data;\n        this.editingLevel1Feedback = false; // Reset editing flag\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      // Otherwise, add new feedback\n      this.level1Service.addLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(data => {\n        this.level1Feedback = data;\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  submitLevel2Feedback() {\n    // If already editing, update existing feedback instead of adding new\n    if (this.level2Feedback != \"\") {\n      // Call service to update existing feedback\n      this.level2Service.updateLevel1InterviewFeedback(this.candidateId, this.newLevel2Feedback).subscribe(data => {\n        this.level2Feedback = data;\n        this.editingLevel2Feedback = false; // Reset editing flag\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      // Otherwise, add new feedback\n      this.level1Service.addLevel2InterviewFeedback(this.candidateId, this.newLevel2Feedback).subscribe(data => {\n        this.level2Feedback = data;\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  submit() {}\n  static #_ = this.ɵfac = function InterviewFeedbackComponent_Factory(t) {\n    return new (t || InterviewFeedbackComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.level1InterviewFeedbackService), i0.ɵɵdirectiveInject(i3.level2InterviewFeedbackService), i0.ɵɵdirectiveInject(i4.hrDiscussionFeedbackService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InterviewFeedbackComponent,\n    selectors: [[\"app-interview-feedback\"]],\n    decls: 6,\n    vars: 6,\n    consts: [[4, \"ngIf\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function InterviewFeedbackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, InterviewFeedbackComponent_div_0_Template, 6, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, InterviewFeedbackComponent_div_1_Template, 7, 1, \"div\", 0);\n        i0.ɵɵtemplate(2, InterviewFeedbackComponent_div_2_Template, 6, 1, \"div\", 0);\n        i0.ɵɵtemplate(3, InterviewFeedbackComponent_div_3_Template, 7, 1, \"div\", 0);\n        i0.ɵɵtemplate(4, InterviewFeedbackComponent_div_4_Template, 6, 1, \"div\", 0);\n        i0.ɵɵtemplate(5, InterviewFeedbackComponent_div_5_Template, 7, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.level1Feedback);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.level1Feedback);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.level2Feedback);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.level2Feedback);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hrDiscussion);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hrDiscussion);\n      }\n    },\n    dependencies: [i5.NgIf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\n{\n  // If already editing, update existing feedback instead of adding new\n  if (this.level1Feedback != \"\") {\n    // Call service to update existing feedback\n    this.level1Service.updateLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(data => {\n      this.level1Feedback = data;\n      this.editingLevel1Feedback = false; // Reset editing flag\n    }, error => {\n      console.log(error);\n    });\n  } else {\n    // Otherwise, add new feedback\n    this.level1Service.addLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(data => {\n      this.level1Feedback = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n// Similar methods for level 2 and HR discussion feedback\neditLevel1Feedback();\n{\n  this.newLevel1Feedback = this.level1Feedback; // Initialize input field with existing feedback\n  this.editingLevel1Feedback = true; // Set editing flag\n}","map":{"version":3,"mappings":"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","names":["i0","InterviewFeedbackComponent","constructor","route","level1Service","level2Service","hrDiscussionService","ngOnInit","params","subscribe","candidateId","fetchInterviewDetails","getLevel1InterviewFeedback","data","level1Feedback","error","console","log","getLevel2InterviewFeedback","level2Feedback","getHRDiscussion","hrDiscussion","submitLevel1Feedback","updateLevel1InterviewFeedback","newLevel1Feedback","editingLevel1Feedback","addLevel1InterviewFeedback","submitLevel2Feedback","newLevel2Feedback","editingLevel2Feedback","addLevel2InterviewFeedback","submit","selectors","decls","vars","consts","template","editLevel1Feedback"],"sourceRoot":"","sources":["C:\\Users\\RizwanAhmed\\Downloads\\resource_management_app_new\\resource_management_app\\src\\app\\recruiter-home\\interview-feedback\\interview-feedback.component.html","C:\\Users\\RizwanAhmed\\Downloads\\resource_management_app_new\\resource_management_app\\src\\app\\recruiter-home\\interview-feedback\\interview-feedback.component.ts"],"sourcesContent":["<div *ngIf=\"!level1Feedback\">\n    <h2>Enter Level 1 Interview Feedback</h2>\n    <textarea [(ngModel)]=\"newLevel1Feedback\"></textarea>\n    <button (click)=\"submitLevel1Feedback()\">Submit</button>\n</div>\n<div *ngIf=\"level1Feedback\">\n    <h2>Level 1 Interview Feedback</h2>\n    <p>{{ level1Feedback }}</p>\n    <button (click)=\"editLevel1Feedback()\">Edit</button>\n</div>\n\n<div *ngIf=\"!level2Feedback\">\n    <h2>Enter Level 2 Interview Feedback</h2>\n    <textarea [(ngModel)]=\"newLevel2Feedback\"></textarea>\n    <button (click)=\"submitLevel2Feedback()\">Submit</button>\n</div>\n<div *ngIf=\"level2Feedback\">\n    <h2>Level 2 Interview Feedback</h2>\n    <p>{{ level2Feedback }}</p>\n    <button (click)=\"editLevel2Feedback()\">Edit</button>\n</div>\n\n<div *ngIf=\"!hrDiscussion\">\n    <h2>Enter HR Discussion Feedback</h2>\n    <textarea [(ngModel)]=\"newHRDiscussion\"></textarea>\n    <button (click)=\"submitHRDiscussion()\">Submit</button>\n</div>\n<div *ngIf=\"hrDiscussion\">\n    <h2>HR Discussion</h2>\n    <p>{{ hrDiscussion }}</p>\n    <button (click)=\"editHRDiscussion()\">Edit</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { level1InterviewFeedbackService } from '../../services/level1-interview-feedback.service'; // Import your CandidateService here\nimport { level2InterviewFeedbackService } from '../../services/level2-interview-feedback.service'; // Import your CandidateService here\nimport { hrDiscussionFeedbackService } from '../../services/hr-discussion-feedback.service'; // Import your CandidateService here\n\n\n@Component({\n  selector: 'app-interview-feedback',\n  templateUrl: './interview-feedback.component.html',\n  styleUrls: ['./interview-feedback.component.css']\n})\nexport class InterviewFeedbackComponent implements OnInit {\n  candidateId: number = 0;\n  level1Feedback: string = \"\";\n  level2Feedback: string = \"\";\n  hrDiscussion: string = \"\";\n\n  // New properties to store the new feedback and editing flags\n  newLevel1Feedback: string = '';\n  newLevel2Feedback: string = '';\n  newHRDiscussion: string = '';\n\n  editingLevel1Feedback: boolean = false;\n  editingLevel2Feedback: boolean = false;\n  editingHRDiscussion: boolean = false;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private level1Service: level1InterviewFeedbackService,\n    private level2Service: level2InterviewFeedbackService,\n    private hrDiscussionService: hrDiscussionFeedbackService\n  ) { }\n\n  ngOnInit(){\n    this.route.params.subscribe(params => {\n      this.candidateId = params['id'];\n      this.fetchInterviewDetails();\n    });\n  }\n\n  fetchInterviewDetails() {\n    this.level1Service.getLevel1InterviewFeedback(this.candidateId).subscribe(\n      (data: any) => {\n        this.level1Feedback = data;\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n\n    this.level2Service.getLevel2InterviewFeedback(this.candidateId).subscribe(data => {\n      this.level2Feedback = data;\n    },\n    error => {\n      console.log(error);\n    }\n    );\n\n    this.hrDiscussionService.getHRDiscussion(this.candidateId).subscribe(data => {\n      this.hrDiscussion = data;\n    },\n    error => {\n      console.log(error);\n    }\n    );\n  }\n\n  // Methods to handle submission of new feedback\n  submitLevel1Feedback() {\n    // If already editing, update existing feedback instead of adding new\n    if (this.level1Feedback != \"\") {\n      // Call service to update existing feedback\n      this.level1Service.updateLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(\n        (data: any) => {\n          this.level1Feedback = data;\n          this.editingLevel1Feedback = false; // Reset editing flag\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n    } else {\n      // Otherwise, add new feedback\n      this.level1Service.addLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(\n        (data: any) => {\n          this.level1Feedback = data;\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  submitLevel2Feedback() {\n    // If already editing, update existing feedback instead of adding new\n    if (this.level2Feedback != \"\") {\n      // Call service to update existing feedback\n      this.level2Service.updateLevel1InterviewFeedback(this.candidateId, this.newLevel2Feedback).subscribe(\n        (data: any) => {\n          this.level2Feedback = data;\n          this.editingLevel2Feedback = false; // Reset editing flag\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n    } else {\n      // Otherwise, add new feedback\n      this.level1Service.addLevel2InterviewFeedback(this.candidateId, this.newLevel2Feedback).subscribe(\n        (data: any) => {\n          this.level2Feedback = data;\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  submit()) {\n    // If already editing, update existing feedback instead of adding new\n    if (this.level1Feedback != \"\") {\n      // Call service to update existing feedback\n      this.level1Service.updateLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(\n        (data: any) => {\n          this.level1Feedback = data;\n          this.editingLevel1Feedback = false; // Reset editing flag\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n    } else {\n      // Otherwise, add new feedback\n      this.level1Service.addLevel1InterviewFeedback(this.candidateId, this.newLevel1Feedback).subscribe(\n        (data: any) => {\n          this.level1Feedback = data;\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  // Similar methods for level 2 and HR discussion feedback\n\n  editLevel1Feedback() {\n    this.newLevel1Feedback = this.level1Feedback; // Initialize input field with existing feedback\n    this.editingLevel1Feedback = true; // Set editing flag\n  }\n\n  // Similar edit methods for level 2 and HR discussion feedback\n  \n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}