{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/job-opening.service\";\nexport class EditJobOpeningComponent {\n  constructor(fb, route, activatedRoute, jobOpeningService) {\n    this.fb = fb;\n    this.route = route;\n    this.activatedRoute = activatedRoute;\n    this.jobOpeningService = jobOpeningService;\n    this.jobId = 0;\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(params => {\n      this.jobId = Number(params.get('id'));\n    });\n    this.initForm();\n    this.loadData();\n  }\n  initForm() {\n    this.jobOpeningForm = this.fb.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      requirements: ['', [Validators.required]],\n      responsibilities: ['', [Validators.required]],\n      status: 'active'\n    });\n  }\n  loadData() {\n    this.jobOpeningService.getJobOpeningById(this.jobId).subscribe(data => {\n      TouchList.fillForm(data);\n      console.log('Job opening form loaded with job opening data');\n    }, error => {\n      console.log('Error occured while loading form data');\n    });\n  }\n  fillForm(data) {}\n  submitForm() {\n    if (1) {\n      const jobOpeningData = this.jobOpeningForm.value;\n      this.jobOpeningService.addJobOpening(jobOpeningData).subscribe(response => {\n        console.log('Job opening added successfully:', response);\n        this.route.navigate(['/recruiter-home']);\n      }, error => {\n        console.error('Error adding job opening:', error);\n        // Handle error as needed\n      });\n    }\n  }\n  static #_ = this.ɵfac = function EditJobOpeningComponent_Factory(t) {\n    return new (t || EditJobOpeningComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.JobOpeningService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditJobOpeningComponent,\n    selectors: [[\"app-edit-job-opening\"]],\n    decls: 32,\n    vars: 1,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"addjob\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"text-light\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"required\", \"\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\"], [\"for\", \"requirements\"], [\"type\", \"text\", \"id\", \"requirements\", \"formControlName\", \"requirements\", \"required\", \"\"], [\"for\", \"responsibilities\"], [\"type\", \"text\", \"id\", \"responsibilities\", \"formControlName\", \"responsibilities\", \"required\", \"\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\"], [\"value\", \"active\"], [\"value\", \"closed\"], [\"type\", \"submit\"]],\n    template: function EditJobOpeningComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Document\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function EditJobOpeningComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(9, \"h3\", 5);\n        i0.ɵɵtext(10, \"Add Job Opening\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementStart(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"textarea\", 9);\n        i0.ɵɵelementStart(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Requirements:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementStart(20, \"label\", 12);\n        i0.ɵɵtext(21, \"Responsibilities:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 13);\n        i0.ɵɵelementStart(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"select\", 15)(26, \"option\", 16);\n        i0.ɵɵtext(27, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 17);\n        i0.ɵɵtext(29, \"Closed\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"button\", 18);\n        i0.ɵɵtext(31, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.jobOpeningForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"body[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    background-image: url('addJoining.jpg');\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n  }\\r\\n  \\r\\n  .addjob[_ngcontent-%COMP%] {\\r\\n    width: 50%;\\r\\n    margin: 0px auto;\\r\\n    padding: 20px;\\r\\n    margin-top: 56px;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  form[_ngcontent-%COMP%] {\\r\\n    padding: 30px;\\r\\n    \\r\\n    border-radius: 10px;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 2px;\\r\\n    font-size: medium;\\r\\n    font-weight: 500;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    margin-bottom: 18px;\\r\\n    border: none;\\r\\n    border-radius: 10px;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: #fff;\\r\\n    padding: 8px 16px;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #28a745;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"button\\\"][_ngcontent-%COMP%] {\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #349049;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVjcnVpdGVyLWhvbWUvZWRpdC1qb2Itb3BlbmluZy9lZGl0LWpvYi1vcGVuaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNERBQTREOztBQUU1RDtJQUNJLGNBQWM7SUFDZCx1Q0FBZ0Q7SUFDaEQsc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQiw0QkFBNEI7RUFDOUI7O0VBRUE7SUFDRSxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixnQkFBZ0I7O0VBRWxCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLDJFQUEyRTtJQUMzRSxtQkFBbUI7O0VBRXJCOztFQUVBO0lBQ0UsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFlBQVk7RUFDZDs7O0VBR0E7OztJQUdFLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZ0hBQWdIO0VBQ2xIOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLyogc3JjL2FwcC9qb2Itb3BlbmluZy1mb3JtL2pvYi1vcGVuaW5nLWZvcm0uY29tcG9uZW50LmNzcyAqL1xyXG5cclxuYm9keSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChzcmNcXGFzc2V0c1xcYWRkSm9pbmluZy5qcGcpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5hZGRqb2Ige1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbjogMHB4IGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogNTZweDtcclxuICBcclxuICB9XHJcbiAgXHJcbiAgZm9ybSB7XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgLyogYm94LXNoYWRvdzogMjBweCAycHggNjBweCAjMDAwMDAwNDEsIGluc2V0IC0yMHB4IC0yMHB4IDYwcHggI2ZmZmZmZjQwOyAqL1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XHJcbiAgICBmb250LXNpemU6IG1lZGl1bTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIGlucHV0LFxyXG4gIHRleHRhcmVhLFxyXG4gIHNlbGVjdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgLyogYm94LXNoYWRvdzogcmdiYSg1MCwgNTAsIDkzLCAwLjI1KSAwcHggMzBweCA2MHB4IC0xMnB4IGluc2V0LCByZ2JhKDAsIDAsIDAsIDAuMykgMHB4IDE4cHggMzZweCAtMThweCBpbnNldDsgKi9cclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHBhZGRpbmc6IDhweCAxNnB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4YTc0NTtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uW3R5cGU9XCJidXR0b25cIl0ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5MDQ5O1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","EditJobOpeningComponent","constructor","fb","route","activatedRoute","jobOpeningService","ngOnInit","paramMap","subscribe","params","jobId","Number","get","initForm","loadData","jobOpeningForm","group","title","required","description","requirements","responsibilities","status","getJobOpeningById","data","TouchList","fillForm","console","log","error","submitForm","jobOpeningData","value","addJobOpening","response","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\RizwanAhmed\\Downloads\\resource_management_app_new\\resource_management_app\\src\\app\\recruiter-home\\edit-job-opening\\edit-job-opening.component.ts","C:\\Users\\RizwanAhmed\\Downloads\\resource_management_app_new\\resource_management_app\\src\\app\\recruiter-home\\edit-job-opening\\edit-job-opening.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JobOpeningService } from '../../services/job-opening.service'; // Adjust the path\n\n\n@Component({\n  selector: 'app-edit-job-opening',\n  templateUrl: './edit-job-opening.component.html',\n  styleUrls: ['./edit-job-opening.component.css']\n})\nexport class EditJobOpeningComponent implements OnInit {\n  jobOpeningForm!: FormGroup;\n  jobId: number = 0;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: Router,\n    private activatedRoute: ActivatedRoute,\n    private jobOpeningService: JobOpeningService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe((params) => {\n      this.jobId = Number(params.get('id'));\n    });\n\n    this.initForm();\n\n    this.loadData();\n  }\n\n  private initForm() {\n    this.jobOpeningForm = this.fb.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      requirements: ['', [Validators.required]],\n      responsibilities: ['', [Validators.required]],\n      status: 'active',\n    });\n\n    \n  }\n\n  loadData() {\n    this.jobOpeningService.getJobOpeningById(this.jobId).subscribe(\n      (data: any[]) => {\n        TouchList.fillForm(data);\n        console.log('Job opening form loaded with job opening data');\n      },\n      (error) => {\n        console.log('Error occured while loading form data')\n      }\n    )\n  }\n\n  fillForm(data: any[]){\n\n  }\n\n  submitForm() {\n    if (1) {\n      const jobOpeningData = this.jobOpeningForm.value;\n      this.jobOpeningService.addJobOpening(jobOpeningData).subscribe(\n        (response) => {\n          console.log('Job opening added successfully:', response);\n          this.route.navigate(['/recruiter-home']);\n        },\n        (error) => {\n          console.error('Error adding job opening:', error);\n          // Handle error as needed\n        }\n      );\n    }\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n</head>\n\n<body>\n  <div class=\"addjob\">\n\n    <form [formGroup]=\"jobOpeningForm\" (ngSubmit)=\"submitForm()\">\n      <h3 class=\"text-center text-light\">Add Job Opening</h3>\n      <label for=\"title\">Title:</label>\n      <input type=\"text\" id=\"title\" formControlName=\"title\" required>\n    \n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" formControlName=\"description\" required></textarea>\n    \n      <label for=\"requirements\">Requirements:</label>\n      <input type=\"text\" id=\"requirements\" formControlName=\"requirements\" required>\n    \n      <label for=\"responsibilities\">Responsibilities:</label>\n      <input type=\"text\" id=\"responsibilities\" formControlName=\"responsibilities\" required>\n    \n      <label for=\"status\">Status:</label>\n      <select id=\"status\" formControlName=\"status\">\n        <option value=\"active\">Active</option>\n        <option value=\"closed\">Closed</option>\n      </select>\n    \n      <button type=\"submit\">Submit</button>\n    </form>\n     \n  </div>\n\n</body>\n\n</html>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}