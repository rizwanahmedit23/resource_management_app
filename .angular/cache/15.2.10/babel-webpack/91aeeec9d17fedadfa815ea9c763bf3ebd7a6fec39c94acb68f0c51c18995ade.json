{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AddJobOpeningComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 10);\n    i0.ɵɵelementStart(2, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AddJobOpeningComponent_div_10_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.removeRequirement(i_r3));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const requirement_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Requirement \", i_r3 + 1, \"\");\n    i0.ɵɵproperty(\"formControl\", requirement_r2);\n  }\n}\nfunction AddJobOpeningComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 10);\n    i0.ɵɵelementStart(2, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AddJobOpeningComponent_div_16_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r7 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.removeResponsibility(i_r7));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const responsibility_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Responsibility \", i_r7 + 1, \"\");\n    i0.ɵɵproperty(\"formControl\", responsibility_r6);\n  }\n}\nexport class AddJobOpeningComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.jobOpeningForm = this.fb.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      requirements: this.fb.array([]),\n      responsibilities: this.fb.array([])\n    });\n  }\n  get requirements() {\n    return this.jobOpeningForm.get('requirements');\n  }\n  get responsibilities() {\n    return this.jobOpeningForm.get('responsibilities');\n  }\n  addRequirement() {\n    this.requirements.push(this.fb.control('', Validators.required));\n  }\n  removeRequirement(index) {\n    this.requirements.removeAt(index);\n  }\n  addResponsibility() {\n    this.responsibilities.push(this.fb.control('', Validators.required));\n  }\n  removeResponsibility(index) {\n    this.responsibilities.removeAt(index);\n  }\n  submitForm() {\n    if (this.jobOpeningForm.valid) {\n      // Implement logic to save the job opening\n      console.log('Job Opening Form Submitted:', this.jobOpeningForm.value);\n      // You can send the form value to your backend or handle it as needed\n    }\n  }\n  static #_ = this.ɵfac = function AddJobOpeningComponent_Factory(t) {\n    return new (t || AddJobOpeningComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddJobOpeningComponent,\n    selectors: [[\"app-add-job-opening\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"required\", \"\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\"], [\"formArrayName\", \"requirements\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"formArrayName\", \"responsibilities\"], [\"type\", \"submit\"], [\"required\", \"\", 3, \"formControl\", \"placeholder\"]],\n    template: function AddJobOpeningComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddJobOpeningComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"textarea\", 4);\n        i0.ɵɵelementStart(7, \"label\");\n        i0.ɵɵtext(8, \"Requirements:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵtemplate(10, AddJobOpeningComponent_div_10_Template, 4, 2, \"div\", 6);\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AddJobOpeningComponent_Template_button_click_11_listener() {\n          return ctx.addRequirement();\n        });\n        i0.ɵɵtext(12, \"Add Requirement\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"label\");\n        i0.ɵɵtext(14, \"Responsibilities:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 8);\n        i0.ɵɵtemplate(16, AddJobOpeningComponent_div_16_Template, 4, 2, \"div\", 6);\n        i0.ɵɵelementStart(17, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AddJobOpeningComponent_Template_button_click_17_listener() {\n          return ctx.addResponsibility();\n        });\n        i0.ɵɵtext(18, \"Add Responsibility\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"button\", 9);\n        i0.ɵɵtext(20, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.jobOpeningForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.requirements.controls);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.responsibilities.controls);\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName],\n    styles: [\"form[_ngcontent-%COMP%] {\\r\\n    max-width: 600px;\\r\\n    margin: 20px auto;\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: #fff;\\r\\n    padding: 8px 16px;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #28a745;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"button\\\"][_ngcontent-%COMP%] {\\r\\n    margin-left: 10px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWpvYi1vcGVuaW5nL2FkZC1qb2Itb3BlbmluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDREQUE0RDs7QUFFNUQ7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQXVDO0lBQ3ZDLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEI7O0VBRUE7O0lBRUUsV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzcmMvYXBwL2pvYi1vcGVuaW5nLWZvcm0vam9iLW9wZW5pbmctZm9ybS5jb21wb25lbnQuY3NzICovXHJcblxyXG5mb3JtIHtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDIwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICBcclxuICBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXQsXHJcbiAgdGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogOHB4IDE2cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xyXG4gIH1cclxuICBcclxuICBidXR0b25bdHlwZT1cImJ1dHRvblwiXSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAmB,gBAAgB;;;;;;;ICUxEC,2BAAsE;IACpEA,4BAAkF;IAClFA,iCAAqD;IAA/BA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;;IADjCA,eAAqC;IAArCA,sEAAqC;IAAjEA,4CAA2B;;;;;;IAQpCA,2BAA6E;IAC3EA,4BAAwF;IACxFA,iCAAwD;IAAlCA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;;IADjCA,eAAwC;IAAxCA,yEAAwC;IAAvEA,+CAA8B;;;ADb7C,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;EAAiB;EAEvCC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEQA,QAAQ;IACd,IAAI,CAACC,cAAc,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAClCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MAClCC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC,CAAC;MACxCE,YAAY,EAAE,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC,EAAE,CAAC;MAC/BC,gBAAgB,EAAE,IAAI,CAACV,EAAE,CAACS,KAAK,CAAC,EAAE;KACnC,CAAC;EACJ;EAEA,IAAID,YAAY;IACd,OAAO,IAAI,CAACL,cAAc,CAACQ,GAAG,CAAC,cAAc,CAAc;EAC7D;EAEA,IAAID,gBAAgB;IAClB,OAAO,IAAI,CAACP,cAAc,CAACQ,GAAG,CAAC,kBAAkB,CAAc;EACjE;EAEAC,cAAc;IACZ,IAAI,CAACJ,YAAY,CAACK,IAAI,CAAC,IAAI,CAACb,EAAE,CAACc,OAAO,CAAC,EAAE,EAAElB,UAAU,CAACU,QAAQ,CAAC,CAAC;EAClE;EAEAS,iBAAiB,CAACC,KAAa;IAC7B,IAAI,CAACR,YAAY,CAACS,QAAQ,CAACD,KAAK,CAAC;EACnC;EAEAE,iBAAiB;IACf,IAAI,CAACR,gBAAgB,CAACG,IAAI,CAAC,IAAI,CAACb,EAAE,CAACc,OAAO,CAAC,EAAE,EAAElB,UAAU,CAACU,QAAQ,CAAC,CAAC;EACtE;EAEAa,oBAAoB,CAACH,KAAa;IAChC,IAAI,CAACN,gBAAgB,CAACO,QAAQ,CAACD,KAAK,CAAC;EACvC;EAEAI,UAAU;IACR,IAAI,IAAI,CAACjB,cAAc,CAACkB,KAAK,EAAE;MAC7B;MACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACpB,cAAc,CAACqB,KAAK,CAAC;MACrE;;EAEJ;EAAC;qBAhDU1B,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAA2B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCNnChC,+BAA6D;QAA1BA;UAAA,OAAYiC,gBAAY;QAAA,EAAC;QACxDjC,gCAAmB;QAAAA,sBAAM;QAAAA,iBAAQ;QACjCA,2BAA+D;QAE/DA,gCAAyB;QAAAA,4BAAY;QAAAA,iBAAQ;QAC7CA,8BAA6E;QAE7EA,6BAAO;QAAAA,6BAAa;QAAAA,iBAAQ;QAC5BA,8BAAkC;QAChCA,yEAGM;QACNA,kCAAiD;QAA3BA;UAAA,OAASiC,oBAAgB;QAAA,EAAC;QAACjC,gCAAe;QAAAA,iBAAS;QAG3EA,8BAAO;QAAAA,kCAAiB;QAAAA,iBAAQ;QAChCA,+BAAsC;QACpCA,yEAGM;QACNA,kCAAoD;QAA9BA;UAAA,OAASiC,uBAAmB;QAAA,EAAC;QAACjC,mCAAkB;QAAAA,iBAAS;QAGjFA,kCAAsB;QAAAA,uBAAM;QAAAA,iBAAS;;;QAzBnCA,8CAA4B;QASCA,gBAA0B;QAA1BA,mDAA0B;QASvBA,eAA8B;QAA9BA,uDAA8B","names":["Validators","i0","AddJobOpeningComponent","constructor","fb","ngOnInit","initForm","jobOpeningForm","group","title","required","description","requirements","array","responsibilities","get","addRequirement","push","control","removeRequirement","index","removeAt","addResponsibility","removeResponsibility","submitForm","valid","console","log","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\SiddhantSinghChouhan\\Desktop\\Recruitment_project\\Resource_Recruitment_management\\resource_management_app\\src\\app\\add-job-opening\\add-job-opening.component.ts","C:\\Users\\SiddhantSinghChouhan\\Desktop\\Recruitment_project\\Resource_Recruitment_management\\resource_management_app\\src\\app\\add-job-opening\\add-job-opening.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-job-opening',\n  templateUrl: './add-job-opening.component.html',\n  styleUrls: ['./add-job-opening.component.css']\n})\nexport class AddJobOpeningComponent implements OnInit {\n  jobOpeningForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.jobOpeningForm = this.fb.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      requirements: this.fb.array([]),\n      responsibilities: this.fb.array([])\n    });\n  }\n\n  get requirements() {\n    return this.jobOpeningForm.get('requirements') as FormArray;\n  }\n\n  get responsibilities() {\n    return this.jobOpeningForm.get('responsibilities') as FormArray;\n  }\n\n  addRequirement() {\n    this.requirements.push(this.fb.control('', Validators.required));\n  }\n\n  removeRequirement(index: number) {\n    this.requirements.removeAt(index);\n  }\n\n  addResponsibility() {\n    this.responsibilities.push(this.fb.control('', Validators.required));\n  }\n\n  removeResponsibility(index: number) {\n    this.responsibilities.removeAt(index);\n  }\n\n  submitForm() {\n    if (this.jobOpeningForm.valid) {\n      // Implement logic to save the job opening\n      console.log('Job Opening Form Submitted:', this.jobOpeningForm.value);\n      // You can send the form value to your backend or handle it as needed\n    }\n  }\n\n}\n","<!-- src/app/job-opening-form/job-opening-form.component.html -->\n\n<form [formGroup]=\"jobOpeningForm\" (ngSubmit)=\"submitForm()\">\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" id=\"title\" formControlName=\"title\" required>\n  \n    <label for=\"description\">Description:</label>\n    <textarea id=\"description\" formControlName=\"description\" required></textarea>\n  \n    <label>Requirements:</label>\n    <div formArrayName=\"requirements\">\n      <div *ngFor=\"let requirement of requirements.controls; let i = index\">\n        <input [formControl]=\"requirement\" placeholder=\"Requirement {{ i + 1 }}\" required>\n        <button type=\"button\" (click)=\"removeRequirement(i)\">Remove</button>\n      </div>\n      <button type=\"button\" (click)=\"addRequirement()\">Add Requirement</button>\n    </div>\n  \n    <label>Responsibilities:</label>\n    <div formArrayName=\"responsibilities\">\n      <div *ngFor=\"let responsibility of responsibilities.controls; let i = index\">\n        <input [formControl]=\"responsibility\" placeholder=\"Responsibility {{ i + 1 }}\" required>\n        <button type=\"button\" (click)=\"removeResponsibility(i)\">Remove</button>\n      </div>\n      <button type=\"button\" (click)=\"addResponsibility()\">Add Responsibility</button>\n    </div>\n  \n    <button type=\"submit\">Submit</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}