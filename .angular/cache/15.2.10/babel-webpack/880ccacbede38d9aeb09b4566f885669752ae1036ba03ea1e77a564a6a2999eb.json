{"ast":null,"code":"import { __decorate } from \"tslib\";\n// candidate.component.ts\nimport { Component } from '@angular/core';\nimport { UserRole } from '../../enums/user-role.enum';\nlet CandidateDetailsComponent = class CandidateDetailsComponent {\n  constructor(candidateService, authService, router) {\n    this.candidateService = candidateService;\n    this.authService = authService;\n    this.router = router;\n    this.userRoles = UserRole;\n    this.id = null;\n    this.name = '';\n    this.email = '';\n    this.contactNo = '';\n    this.candidates = [];\n    this.selectedCandidateIndex = null;\n    this.isOpen = false;\n  }\n  toggleSidebar() {\n    this.isOpen = !this.isOpen;\n  }\n  ngOnInit() {\n    this.loadCandidates();\n  }\n  loadCandidates() {\n    this.candidateService.getAllCandidates().subscribe({\n      next: data => {\n        this.candidates = data;\n      },\n      error: error => {\n        console.error('Error loading candidates', error);\n      }\n    });\n  }\n  addCandidate() {\n    const candidate = {\n      id: this.id,\n      name: this.name,\n      email: this.email,\n      contactNo: this.contactNo\n      // Add other properties as needed\n    };\n\n    if (this.selectedCandidateIndex !== null) {\n      const selectedid = this.candidates[this.selectedCandidateIndex].id;\n      this.candidateService.editCandidate(selectedid, candidate).subscribe({\n        next: () => {\n          this.selectedCandidateIndex = null;\n          this.clearForm();\n          this.loadCandidates();\n        },\n        error: error => {\n          console.error('Error editing candidate', error);\n        }\n      });\n    } else {\n      this.candidateService.addCandidate(candidate).subscribe({\n        next: () => {\n          this.clearForm();\n          this.loadCandidates();\n        },\n        error: error => {\n          console.error('Error adding candidate', error);\n        }\n      });\n    }\n  }\n  editCandidate(index) {\n    console.log(\"edit working!!\");\n    this.selectedCandidateIndex = index;\n    const selectedCandidate = this.candidates[index];\n    this.id = selectedCandidate.id;\n    this.name = selectedCandidate.name;\n    this.email = selectedCandidate.email;\n    this.contactNo = selectedCandidate.contactNo;\n  }\n  deleteCandidate(index) {\n    const selectedid = this.candidates[index].id;\n    this.candidateService.deleteCandidate(selectedid).subscribe({\n      next: () => {\n        this.loadCandidates();\n      },\n      error: error => {\n        console.error('Error deleting candidate', error);\n      }\n    });\n  }\n  clearForm() {\n    this.id = null;\n    this.name = '';\n    this.email = '';\n    this.contactNo = '';\n  }\n  isHomePage() {\n    return this.router.url === '/home';\n  }\n};\nCandidateDetailsComponent = __decorate([Component({\n  selector: 'app-candidate-details',\n  templateUrl: './candidate-details.component.html',\n  styleUrls: ['./candidate-details.component.css']\n})], CandidateDetailsComponent);\nexport { CandidateDetailsComponent };","map":{"version":3,"mappings":"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","names":["Component","UserRole","CandidateDetailsComponent","constructor","candidateService","authService","router","toggleSidebar","isOpen","ngOnInit","loadCandidates","getAllCandidates","subscribe","next","data","candidates","error","console","addCandidate","candidate","id","name","email","contactNo","selectedCandidateIndex","selectedid","editCandidate","clearForm","index","log","selectedCandidate","deleteCandidate","isHomePage","url","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\SiddhantSinghChouhan\\Desktop\\Recruitment_project\\Resource_Recruitment_management\\resource_management_app\\src\\app\\candidate-details\\candidate-details.component.ts"],"sourcesContent":["// candidate.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CandidateService } from './candidate.service';\r\nimport { AuthService } from '../../login/auth.service';\r\nimport { UserRole } from '../../enums/user-role.enum';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-candidate-details',\r\n  templateUrl: './candidate-details.component.html',\r\n  styleUrls: ['./candidate-details.component.css']\r\n})\r\nexport class CandidateDetailsComponent implements OnInit {\r\n  userRoles = UserRole;\r\n  id: number | null = null;\r\n  name: string = '';\r\n  email: string = '';\r\n  contactNo: string = '';\r\n\r\n  candidates: any[] = [];\r\n  selectedCandidateIndex: number | null = null;\r\n\r\n\r\n  constructor(private candidateService: CandidateService, public authService: AuthService,private router: Router) {}\r\n\r\n  isOpen = false;\r\n\r\n  toggleSidebar() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCandidates();\r\n  }\r\n\r\n  loadCandidates() {\r\n    this.candidateService.getAllCandidates().subscribe({\r\n      next: (data) => {\r\n        this.candidates = data;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading candidates', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  addCandidate() {\r\n    const candidate = {\r\n      id: this.id,\r\n      name: this.name,\r\n      email: this.email,\r\n      contactNo: this.contactNo\r\n      // Add other properties as needed\r\n    };\r\n\r\n    if (this.selectedCandidateIndex !== null) {\r\n      const selectedid = this.candidates[this.selectedCandidateIndex].id;\r\n      this.candidateService.editCandidate(selectedid, candidate).subscribe({\r\n        next: () => {\r\n          this.selectedCandidateIndex = null;\r\n          this.clearForm();\r\n          this.loadCandidates();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error editing candidate', error);\r\n        }\r\n      });\r\n    } else {\r\n      this.candidateService.addCandidate(candidate).subscribe({\r\n        next: () => {\r\n          this.clearForm();\r\n          this.loadCandidates();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error adding candidate', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  editCandidate(index: number) {\r\n    console.log(\"edit working!!\");\r\n    this.selectedCandidateIndex = index;\r\n    const selectedCandidate = this.candidates[index];\r\n    this.id = selectedCandidate.id;\r\n    this.name = selectedCandidate.name;\r\n    this.email = selectedCandidate.email;\r\n    this.contactNo = selectedCandidate.contactNo;\r\n  }\r\n\r\n  deleteCandidate(index: number) {\r\n    const selectedid = this.candidates[index].id;\r\n    this.candidateService.deleteCandidate(selectedid).subscribe({\r\n      next: () => {\r\n        this.loadCandidates();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error deleting candidate', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.id = null;\r\n    this.name = '';\r\n    this.email = '';\r\n    this.contactNo = '';\r\n  }\r\n  isHomePage(): boolean {\r\n    return this.router.url === '/home';\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}