{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AddJobOpeningComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.jobOpeningForm = this.fb.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      requirements: this.fb.array([]),\n      responsibilities: this.fb.array([])\n    });\n  }\n  submitForm() {\n    if (this.jobOpeningForm.valid) {\n      console.log('Job Opening Form Submitted:', this.jobOpeningForm.value);\n    }\n  }\n  static #_ = this.ɵfac = function AddJobOpeningComponent_Factory(t) {\n    return new (t || AddJobOpeningComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddJobOpeningComponent,\n    selectors: [[\"app-add-job-opening\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"required\", \"\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\"], [\"for\", \"requirement\"], [\"type\", \"text\", \"name\", \"requirement\", \"id\", \"requirement\"], [\"for\", \"responsibilities\"], [\"type\", \"text\", \"name\", \"responsibilities\", \"id\", \"responsibilities\"], [\"type\", \"submit\"]],\n    template: function AddJobOpeningComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddJobOpeningComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(2, \"h3\", 1);\n        i0.ɵɵtext(3, \"Add Job Opening\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementStart(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"textarea\", 5);\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Requirements:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementStart(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Responsibilities:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵtext(17, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.jobOpeningForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\r\\n    max-width: 600px;\\r\\n    margin: 20px auto;\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: #fff;\\r\\n    padding: 8px 16px;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #28a745;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"button\\\"][_ngcontent-%COMP%] {\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n  button[_ngcontent-%COMP%]:hover{\\r\\n    background-color: #349049;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWpvYi1vcGVuaW5nL2FkZC1qb2Itb3BlbmluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDREQUE0RDs7QUFFNUQ7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQXVDO0lBQ3ZDLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEI7O0VBRUE7O0lBRUUsV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHNyYy9hcHAvam9iLW9wZW5pbmctZm9ybS9qb2Itb3BlbmluZy1mb3JtLmNvbXBvbmVudC5jc3MgKi9cclxuXHJcbmZvcm0ge1xyXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dCxcclxuICB0ZXh0YXJlYSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiA4cHggMTZweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDU7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvblt0eXBlPVwiYnV0dG9uXCJdIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIH1cclxuICBidXR0b246aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5MDQ5O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAmB,gBAAgB;;;AAO9E,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;EAAiB;EAEvCC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEQA,QAAQ;IACd,IAAI,CAACC,cAAc,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAClCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MAClCC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MACxCE,YAAY,EAAE,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC,EAAE,CAAC;MAC/BC,gBAAgB,EAAE,IAAI,CAACV,EAAE,CAACS,KAAK,CAAC,EAAE;KACnC,CAAC;EACJ;EAGAE,UAAU;IACR,IAAI,IAAI,CAACR,cAAc,CAACS,KAAK,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACX,cAAc,CAACY,KAAK,CAAC;;EAEzE;EAAC;qBAvBUjB,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAkB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCPnCC,2BAAK;QAE8BA;UAAA,OAAYC,gBAAY;QAAA,EAAC;QACxDD,6BAAwB;QAAAA,+BAAe;QAAAA,iBAAK;QAC5CA,gCAAmB;QAAAA,sBAAM;QAAAA,iBAAQ;QACjCA,2BAA+D;QAE/DA,gCAAyB;QAAAA,4BAAY;QAAAA,iBAAQ;QAC7CA,8BAA6E;QAE7EA,iCAAyB;QAAAA,8BAAa;QAAAA,iBAAQ;QAC9CA,4BAAuD;QASvDA,iCAA8B;QAAAA,kCAAiB;QAAAA,iBAAQ;QACvDA,4BAAiE;QASjEA,mCAAsB;QAAAA,uBAAM;QAAAA,iBAAS;;;QA5BnCA,eAA4B;QAA5BA,8CAA4B","names":["Validators","AddJobOpeningComponent","constructor","fb","ngOnInit","initForm","jobOpeningForm","group","title","required","description","requirements","array","responsibilities","submitForm","valid","console","log","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\SiddhantSinghChouhan\\Desktop\\Recruitment_project\\Resource_Recruitment_management\\resource_management_app\\src\\app\\add-job-opening\\add-job-opening.component.ts","C:\\Users\\SiddhantSinghChouhan\\Desktop\\Recruitment_project\\Resource_Recruitment_management\\resource_management_app\\src\\app\\add-job-opening\\add-job-opening.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-job-opening',\n  templateUrl: './add-job-opening.component.html',\n  styleUrls: ['./add-job-opening.component.css']\n})\nexport class AddJobOpeningComponent implements OnInit {\n  jobOpeningForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.jobOpeningForm = this.fb.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      requirements: this.fb.array([]),\n      responsibilities: this.fb.array([])\n    });\n  }\n\n\n  submitForm() {\n    if (this.jobOpeningForm.valid) {\n      console.log('Job Opening Form Submitted:', this.jobOpeningForm.value);\n    }\n  }\n\n}\n","\n<div>\n   \n<form [formGroup]=\"jobOpeningForm\" (ngSubmit)=\"submitForm()\">\n    <h3 class=\"text-center\">Add Job Opening</h3>\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" id=\"title\" formControlName=\"title\" required>\n  \n    <label for=\"description\">Description:</label>\n    <textarea id=\"description\" formControlName=\"description\" required></textarea>\n  \n    <label for=\"requirement\">Requirements:</label>\n    <input type=\"text\" name=\"requirement\" id=\"requirement\">\n    <!-- <div formArrayName=\"requirements\">\n      <div *ngFor=\"let requirement of requirements.controls; let i = index\">\n        <input (formControl)=\"requirement\" placeholder=\"Requirement {{ i + 1 }}\" required>\n        <button type=\"button\" (click)=\"removeRequirement(i)\">Remove</button>\n      </div>\n      <button type=\"button\" (click)=\"addRequirement()\">Add Requirement</button>\n    </div> -->\n  \n    <label for=\"responsibilities\">Responsibilities:</label>\n    <input type=\"text\" name=\"responsibilities\" id=\"responsibilities\">\n    <!-- <div formArrayName=\"responsibilities\">\n      <div *ngFor=\"let responsibility of responsibilities.controls; let i = index\">\n        <input (formControl)=\"responsibility\" placeholder=\"Responsibility {{ i + 1 }}\" required>\n        <button type=\"button\" (click)=\"removeResponsibility(i)\">Remove</button>\n      </div>\n      <button type=\"button\" (click)=\"addResponsibility()\">Add Responsibility</button>\n    </div> -->\n  \n    <button type=\"submit\">Submit</button>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}